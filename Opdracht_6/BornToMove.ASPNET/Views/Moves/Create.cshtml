@model BornToMove.DAL.Move

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Move</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @using (Html.BeginForm(FormMethod.Post, new { action = "/Moves/CreateMove", id = "create_move_form" }))
        {
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="name" class="control-label"></label>
                    @Html.TextBoxFor(m => m.name, new { @class = "form-control" })
                    <span asp-validation-for="name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="description" class="control-label"></label>
                    @Html.TextBoxFor(m => m.description, new { @class = "form-control" })
                    <span asp-validation-for="description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="sweatrate" class="control-label"></label>
                    @Html.TextBoxFor(m => m.sweatrate, new { type = "number", min = "1", max = "10", @class = "form-control" })
                    <span asp-validation-for="sweatrate" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
        }
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
